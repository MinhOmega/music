name: Auto-Merge-PRs
#
# This workflow automates the merging of pull requests after they have received
# the required approvals.
#
on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository 🚀
        uses: actions/checkout@v2

      - name: Install jq 📦
        run: sudo apt-get install -y jq

      - name: Install GitHub CLI 🔧
        run: |
          # Install GitHub CLI
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"

      - name: Check PR approvals and merge if approved 🛡️
        id: merge-step
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          REQUIRED_APPROVERS: ${{ vars.REQUIRED_APPROVERS }}
          BASE_BRANCH: 'developer'
        run: |
          # Get the pull request number from the event
          PR_NUMBER=$(jq -r '.pull_request.number' "$GITHUB_EVENT_PATH")

          # Get the base branch of the pull request
          PR_BASE_BRANCH=$(jq -r '.pull_request.base.ref' "$GITHUB_EVENT_PATH")

          # Set the end time for the merge process
          END_TIME=$(($(date +%s) + 86400))

          # Check if the pull request targets the base branch
          if [ "$PR_BASE_BRANCH" == "$BASE_BRANCH" ]; then
            # Get the required approvers
            APPROVERS=(${REQUIRED_APPROVERS//,/ })

            # Determine the number of required approvals
            NUM_APPROVERS=

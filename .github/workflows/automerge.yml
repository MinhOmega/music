name: Auto Merge PR
#
on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened
      - edited
      - synchronize

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    env:
      REQUIRED_APPROVERS: ${{ secrets.REQUIRED_APPROVERS }}

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Verify approvals
      id: verify
      run: |
        PR_BRANCH=$(jq -r '.pull_request.base.ref' $GITHUB_EVENT_PATH)
        REQUIRED_APPROVERS_ARR=(${REQUIRED_APPROVERS//,/ })

        # Fetch reviews and filter out the PR creator's approval
        PR_APPROVALS=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews" \
          | jq -r '[.[] | select(.state == "APPROVED") | .user.login] | sort | join(",")')

        # Check if all required approvers have approved
        ALL_APPROVED=true
        for APPROVER in "${REQUIRED_APPROVERS_ARR[@]}"; do
          if [[ ! "$PR_APPROVALS" == *"$APPROVER"* ]]; then
            ALL_APPROVED=false
            break
          fi
        done

        echo "PR_BRANCH=${PR_BRANCH}" >> $GITHUB_ENV
        echo "ALL_APPROVED=${ALL_APPROVED}" >> $GITHUB_ENV

    - name: Auto merge if conditions are met
      if: ${{ env.ALL_APPROVED == 'true' && env.PR_BRANCH == 'developer' }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        git fetch origin +refs/pull/${{ github.event.pull_request.number }}/merge
        git checkout -qf FETCH_HEAD
        git merge origin/developer

        git push origin HEAD:developer

    - name: Add comment on PR
      if: ${{ env.ALL_APPROVED == 'true' && env.PR_BRANCH == 'developer' }}
      run: |
        curl -s -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"body":"PR has been automatically merged by GitHub Actions."}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
